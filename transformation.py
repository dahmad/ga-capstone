from glob import glob
import pandas as pd
import librosa
import numpy as np
import scipy.stats as sps

# Combining results into one dataframe
moreau = pd.read_csv('assets/moreau/results.csv')
fado = pd.read_csv('assets/fado/results.csv')
jacques = sorted(glob('assets/au-suivant/*.wav'))
jacques = pd.DataFrame(jacques, columns=['filepath'])
jacques = jacques.join(pd.read_csv('assets/au-suivant/results.csv'))
marling = sorted(glob('assets/marling/*.wav'))
marling = pd.DataFrame(marling, columns=['filepath'])
marling = marling.join(pd.read_csv('assets/marling/results.csv'))
df = moreau.append(fado)
df = df.append(jacques)
df = df.append(marling)
df.reset_index(inplace=True, drop=True)

# Separating dataframe by classification result
selections = df.loc[(df['classification'] == 1)]
not_selected = df.loc[(df['classification'] == 0)]

# Random subset of those classified as 0
not_selected_subset = not_selected.loc[np.random.choice(not_selected.index, 238, replace=False)]

# Combining 1's and subset of 0's into balanced dataframe
df = selections.append(not_selected_subset)

# Column creation
df['raw_med_minmax'] = df['filepath'].apply(lambda x: np.median(sps.describe((librosa.core.load(x)[0])).minmax))
df['raw_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe((librosa.core.load(x)[0])).variance))
df['ifgram_75_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).minmax, 75))
df['melspectrogram_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).skewness, 75))
df['autocorrelate_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.autocorrelate(librosa.core.load(x)[0])).minmax, 25))
df['raw_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe((librosa.core.load(x)[0])).kurtosis))
df['autocorrelate_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.autocorrelate(librosa.core.load(x)[0])).minmax, 50))
df['melspectrogram_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).minmax))
df['raw_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe((librosa.core.load(x)[0])).mean))
df['stft_50_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).kurtosis, 50))
df['ifgram_75_minmax'] = df['ifgram_75_minmax'].apply(lambda x: x.real)
df['stft_50_kurtosis'] = df['stft_50_kurtosis'].apply(lambda x: x.real)
df['autocorrelate_skewness'] = df['filepath'].apply(lambda x: sps.describe(librosa.core.autocorrelate(librosa.core.load(x)[0])).skewness)
df['stft_min_cov_minmax'] = df['filepath'].apply(lambda x: np.min(np.cov(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).minmax)))
df['stft_min_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.min(np.corrcoef(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).minmax)))
df['stft_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).mean, 75))
df['stft_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).mean))
df['stft_ptp_variance'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).variance))
df['stft_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).kurtosis))
df['stft_50_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).minmax),50))
df['stft_mean_cov_minmax'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).minmax)))
df['stft_25_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).skewness, 25))
df['ifgram_75_corrcoef_variance'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance),75))
df['ifgram_max_cov_variance'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance)))
df['ifgram_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).minmax))
df['ifgram_75_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance, 75))
df['ifgram_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).minmax))
df['ifgram_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).minmax))
df['ifgram_max_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance))
df['ifgram_mean_corrcoef_variance'] = df['filepath'].apply(lambda x: np.mean(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance)))
df['ifgram_50_corrcoef_variance'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance),50))
df['ifgram_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance))
df['ifgram_min_minmax'] = df['ifgram_min_minmax'].apply(lambda x: x.real)
df['ifgram_mean_minmax'] = df['ifgram_mean_minmax'].apply(lambda x: x.real)
df['ifgram_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean, 25))
df['ifgram_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean))
df['ifgram_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean))
df['ifgram_mean_cov_variance'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance)))
df['ifgram_25_corrcoef_mean'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean),25))
df['ifgram_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean, 75))
df['ifgram_min_corrcoef_mean'] = df['filepath'].apply(lambda x: np.min(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_50_cov_variance'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance),50))
df['ifgram_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean))
df['ifgram_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean, 50))
df['ifgram_25_mean'] = df['ifgram_25_mean'].apply(lambda x: x.real)
df['ifgram_max_mean'] = df['ifgram_max_mean'].apply(lambda x: x.real)
df['ifgram_mean_mean'] = df['ifgram_mean_mean'].apply(lambda x: x.real)
df['ifgram_25_corrcoef_mean'] = df['ifgram_25_corrcoef_mean'].apply(lambda x: x.real)
df['ifgram_75_mean'] = df['ifgram_75_mean'].apply(lambda x: x.real)
df['ifgram_min_corrcoef_mean'] = df['ifgram_min_corrcoef_mean'].apply(lambda x: x.real)
df['ifgram_min_mean'] = df['ifgram_min_mean'].apply(lambda x: x.real)
df['ifgram_50_mean'] = df['ifgram_50_mean'].apply(lambda x: x.real)
df['ifgram_std_corrcoef_mean'] = df['filepath'].apply(lambda x: np.std(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_var_corrcoef_mean'] = df['filepath'].apply(lambda x: np.var(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_min_cov_mean'] = df['filepath'].apply(lambda x: np.min(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_ptp_cov_mean'] = df['filepath'].apply(lambda x: np.ptp(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_25_cov_mean'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean),25))
df['ifgram_50_cov_mean'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean),50))
df['ifgram_75_cov_mean'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean),75))
df['ifgram_mean_cov_mean'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_std_cov_mean'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_var_cov_mean'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).mean)))
df['ifgram_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness))
df['ifgram_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness))
df['ifgram_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness))
df['ifgram_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness))
df['ifgram_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness))
df['ifgram_var_skewness'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness))
df['ifgram_max_cov_skewness'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness)))
df['ifgram_min_cov_skewness'] = df['filepath'].apply(lambda x: np.min(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness)))
df['ifgram_ptp_cov_skewness'] = df['filepath'].apply(lambda x: np.ptp(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness)))
df['ifgram_mean_cov_skewness'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness)))
df['ifgram_std_cov_skewness'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness)))
df['ifgram_var_cov_skewness'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).skewness)))
df['ifgram_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis))
df['ifgram_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis))
df['ifgram_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis))
df['ifgram_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis))
df['ifgram_std_kurtosis'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis))
df['ifgram_var_kurtosis'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis))
df['ifgram_max_cov_kurtosis'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis)))
df['ifgram_min_cov_kurtosis'] = df['filepath'].apply(lambda x: np.min(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis)))
df['ifgram_ptp_cov_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis)))
df['ifgram_25_cov_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis),25))
df['ifgram_50_cov_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis),50))
df['ifgram_75_cov_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis),75))
df['ifgram_mean_cov_kurtosis'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis)))
df['ifgram_std_cov_kurtosis'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis)))
df['ifgram_var_cov_kurtosis'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).kurtosis)))
df['chroma_stft_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax))
df['chroma_stft_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax, 25))
df['chroma_stft_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax, 50))
df['chroma_stft_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax))
df['chroma_stft_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax))
df['chroma_stft_var_minmax'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax))
df['chroma_stft_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax)))
df['chroma_stft_ptp_cov_minmax'] = df['filepath'].apply(lambda x: np.ptp(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax)))
df['chroma_stft_75_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax),75))
df['chroma_stft_mean_cov_minmax'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax)))
df['chroma_stft_std_cov_minmax'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax)))
df['chroma_stft_var_cov_minmax'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).minmax)))
df['chroma_stft_max_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance))
df['chroma_stft_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance))
df['chroma_stft_ptp_variance'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance))
df['chroma_stft_25_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance, 25))
df['chroma_stft_50_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance, 50))
df['chroma_stft_75_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance, 75))
df['chroma_stft_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance))
df['chroma_stft_std_variance'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance))
df['chroma_stft_var_variance'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance))
df['chroma_stft_max_cov_variance'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).variance)))
df['chroma_stft_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean))
df['chroma_stft_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean))
df['chroma_stft_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean))
df['chroma_stft_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean, 25))
df['chroma_stft_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean, 50))
df['chroma_stft_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean, 75))
df['chroma_stft_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean))
df['chroma_stft_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean))
df['chroma_stft_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean))
df['chroma_stft_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).mean)))
df['chroma_stft_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness))
df['chroma_stft_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness))
df['chroma_stft_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness))
df['chroma_stft_25_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness, 25))
df['chroma_stft_50_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness, 50))
df['chroma_stft_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness, 75))
df['chroma_stft_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness))
df['chroma_stft_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness))
df['chroma_stft_var_skewness'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness))
df['chroma_stft_max_cov_skewness'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).skewness)))
df['chroma_stft_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis))
df['chroma_stft_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis))
df['chroma_stft_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis))
df['chroma_stft_25_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis, 25))
df['chroma_stft_50_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis, 50))
df['chroma_stft_75_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis, 75))
df['chroma_stft_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis))
df['chroma_stft_std_kurtosis'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis))
df['chroma_stft_var_kurtosis'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis))
df['chroma_stft_max_cov_kurtosis'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_stft(librosa.core.load(x)[0])).kurtosis)))
df['chroma_cqt_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax))
df['chroma_cqt_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax))
df['chroma_cqt_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax, 25))
df['chroma_cqt_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax, 50))
df['chroma_cqt_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax))
df['chroma_cqt_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax))
df['chroma_cqt_var_minmax'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax))
df['chroma_cqt_max_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.max(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_min_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.min(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_ptp_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.ptp(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_25_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax),25))
df['chroma_cqt_50_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax),50))
df['chroma_cqt_75_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax),75))
df['chroma_cqt_mean_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.mean(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_std_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.std(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_var_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.var(np.corrcoef(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_std_cov_minmax'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_var_cov_minmax'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).minmax)))
df['chroma_cqt_max_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance))
df['chroma_cqt_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance))
df['chroma_cqt_ptp_variance'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance))
df['chroma_cqt_25_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance, 25))
df['chroma_cqt_50_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance, 50))
df['chroma_cqt_75_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance, 75))
df['chroma_cqt_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance))
df['chroma_cqt_std_variance'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance))
df['chroma_cqt_var_variance'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance))
df['chroma_cqt_max_cov_variance'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).variance)))
df['chroma_cqt_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean))
df['chroma_cqt_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean))
df['chroma_cqt_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean))
df['chroma_cqt_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean, 25))
df['chroma_cqt_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean, 50))
df['chroma_cqt_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean, 75))
df['chroma_cqt_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean))
df['chroma_cqt_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean))
df['chroma_cqt_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean))
df['chroma_cqt_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).mean)))
df['chroma_cqt_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness))
df['chroma_cqt_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness))
df['chroma_cqt_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness))
df['chroma_cqt_25_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness, 25))
df['chroma_cqt_50_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness, 50))
df['chroma_cqt_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness, 75))
df['chroma_cqt_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness))
df['chroma_cqt_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness))
df['chroma_cqt_var_skewness'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness))
df['chroma_cqt_max_cov_skewness'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).skewness)))
df['chroma_cqt_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis))
df['chroma_cqt_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis))
df['chroma_cqt_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis))
df['chroma_cqt_25_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis, 25))
df['chroma_cqt_50_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis, 50))
df['chroma_cqt_75_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis, 75))
df['chroma_cqt_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis))
df['chroma_cqt_std_kurtosis'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis))
df['chroma_cqt_var_kurtosis'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis))
df['chroma_cqt_max_cov_kurtosis'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.chroma_cqt(librosa.core.load(x)[0])).kurtosis)))
df['mfcc_max_minmax'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax))
df['mfcc_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax))
df['mfcc_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax))
df['mfcc_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax, 25))
df['mfcc_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax, 50))
df['mfcc_75_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax, 75))
df['mfcc_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax))
df['mfcc_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax))
df['mfcc_var_minmax'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax))
df['mfcc_min_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.min(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_ptp_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.ptp(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_25_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax),25))
df['mfcc_50_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax),50))
df['mfcc_mean_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.mean(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_std_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.std(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_var_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.var(np.corrcoef(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_min_cov_minmax'] = df['filepath'].apply(lambda x: np.min(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_ptp_cov_minmax'] = df['filepath'].apply(lambda x: np.ptp(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_25_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax),25))
df['mfcc_50_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax),50))
df['mfcc_75_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax),75))
df['mfcc_mean_cov_minmax'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_std_cov_minmax'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_var_cov_minmax'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).minmax)))
df['mfcc_max_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance))
df['mfcc_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance))
df['mfcc_ptp_variance'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance))
df['mfcc_25_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance, 25))
df['mfcc_50_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance, 50))
df['mfcc_75_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance, 75))
df['mfcc_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance))
df['mfcc_std_variance'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance))
df['mfcc_var_variance'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance))
df['mfcc_max_cov_variance'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).variance)))
df['mfcc_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean))
df['mfcc_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean))
df['mfcc_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean))
df['mfcc_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean, 25))
df['mfcc_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean, 50))
df['mfcc_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean, 75))
df['mfcc_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean))
df['mfcc_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean))
df['mfcc_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean))
df['mfcc_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).mean)))
df['mfcc_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness))
df['mfcc_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness))
df['mfcc_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness))
df['mfcc_25_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness, 25))
df['mfcc_50_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness, 50))
df['mfcc_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness, 75))
df['mfcc_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness))
df['mfcc_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness))
df['mfcc_var_skewness'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness))
df['mfcc_max_cov_skewness'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).skewness)))
df['mfcc_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis))
df['mfcc_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis))
df['mfcc_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis))
df['mfcc_25_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis, 25))
df['mfcc_50_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis, 50))
df['mfcc_75_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis, 75))
df['mfcc_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis))
df['mfcc_std_kurtosis'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis))
df['mfcc_var_kurtosis'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis))
df['mfcc_max_cov_kurtosis'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.mfcc(librosa.core.load(x)[0])).kurtosis)))
df['spectral_centroid_max_minmax'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax))
df['spectral_centroid_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax))
df['spectral_centroid_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax))
df['spectral_centroid_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax, 25))
df['spectral_centroid_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax, 50))
df['spectral_centroid_75_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax, 75))
df['spectral_centroid_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax))
df['spectral_centroid_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax))
df['spectral_centroid_var_minmax'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax))
df['spectral_centroid_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).minmax)))
df['spectral_centroid_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean))
df['spectral_centroid_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean))
df['spectral_centroid_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean))
df['spectral_centroid_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean, 25))
df['spectral_centroid_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean, 50))
df['spectral_centroid_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean, 75))
df['spectral_centroid_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean))
df['spectral_centroid_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean))
df['spectral_centroid_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean))
df['spectral_centroid_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).mean)))
df['spectral_centroid_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.spectral_centroid(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_max_minmax'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax))
df['tonnetz_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax))
df['tonnetz_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax))
df['tonnetz_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax, 25))
df['tonnetz_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax, 50))
df['tonnetz_75_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax, 75))
df['tonnetz_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax))
df['tonnetz_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax))
df['tonnetz_var_minmax'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax))
df['tonnetz_min_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.min(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_ptp_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.ptp(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_25_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax),25))
df['tonnetz_50_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax),50))
df['tonnetz_mean_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.mean(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_std_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.std(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_var_corrcoef_minmax'] = df['filepath'].apply(lambda x: np.var(np.corrcoef(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_min_cov_minmax'] = df['filepath'].apply(lambda x: np.min(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_ptp_cov_minmax'] = df['filepath'].apply(lambda x: np.ptp(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_25_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax),25))
df['tonnetz_50_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax),50))
df['tonnetz_75_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax),75))
df['tonnetz_mean_cov_minmax'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_std_cov_minmax'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_var_cov_minmax'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).minmax)))
df['tonnetz_max_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance))
df['tonnetz_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance))
df['tonnetz_ptp_variance'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance))
df['tonnetz_25_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance, 25))
df['tonnetz_50_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance, 50))
df['tonnetz_75_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance, 75))
df['tonnetz_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance))
df['tonnetz_std_variance'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance))
df['tonnetz_var_variance'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance))
df['tonnetz_max_cov_variance'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).variance)))
df['tonnetz_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean))
df['tonnetz_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean))
df['tonnetz_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean))
df['tonnetz_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean, 25))
df['tonnetz_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean, 50))
df['tonnetz_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean, 75))
df['tonnetz_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean))
df['tonnetz_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean))
df['tonnetz_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean))
df['tonnetz_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).mean)))
df['tonnetz_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness))
df['tonnetz_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness))
df['tonnetz_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness))
df['tonnetz_25_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness, 25))
df['tonnetz_50_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness, 50))
df['tonnetz_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness, 75))
df['tonnetz_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness))
df['tonnetz_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness))
df['tonnetz_var_skewness'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness))
df['tonnetz_max_cov_skewness'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).skewness)))
df['tonnetz_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_25_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis, 25))
df['tonnetz_50_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis, 50))
df['tonnetz_75_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis, 75))
df['tonnetz_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_std_kurtosis'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_var_kurtosis'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis))
df['tonnetz_max_cov_kurtosis'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tonnetz(librosa.core.load(x)[0])).kurtosis)))
df['tempogram_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).minmax))
df['tempogram_25_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).minmax, 25))
df['tempogram_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).minmax)))
df['tempogram_mean_cov_minmax'] = df['filepath'].apply(lambda x: np.mean(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).minmax)))
df['tempogram_std_cov_minmax'] = df['filepath'].apply(lambda x: np.std(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).minmax)))
df['tempogram_var_cov_minmax'] = df['filepath'].apply(lambda x: np.var(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).minmax)))
df['tempogram_max_variance'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance))
df['tempogram_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance))
df['tempogram_ptp_variance'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance))
df['tempogram_25_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance, 25))
df['tempogram_50_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance, 50))
df['tempogram_75_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance, 75))
df['tempogram_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance))
df['tempogram_std_variance'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance))
df['tempogram_var_variance'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance))
df['tempogram_max_cov_variance'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).variance)))
df['tempogram_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean))
df['tempogram_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean))
df['tempogram_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean))
df['tempogram_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean, 25))
df['tempogram_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean, 50))
df['tempogram_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean, 75))
df['tempogram_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean))
df['tempogram_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean))
df['tempogram_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean))
df['tempogram_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).mean)))
df['tempogram_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness))
df['tempogram_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness))
df['tempogram_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness))
df['tempogram_25_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness, 25))
df['tempogram_50_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness, 50))
df['tempogram_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness, 75))
df['tempogram_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness))
df['tempogram_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness))
df['tempogram_var_skewness'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness))
df['tempogram_max_cov_skewness'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).skewness)))
df['tempogram_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis))
df['tempogram_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis))
df['tempogram_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis))
df['tempogram_25_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis, 25))
df['tempogram_50_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis, 50))
df['tempogram_75_kurtosis'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis, 75))
df['tempogram_mean_kurtosis'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis))
df['tempogram_std_kurtosis'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis))
df['tempogram_var_kurtosis'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis))
df['tempogram_max_cov_kurtosis'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.tempogram(librosa.core.load(x)[0])).kurtosis)))
df['length'] = df['filepath'].apply(lambda x: len(librosa.core.load(x)[0]))
df['stft_min_skewness'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).skewness))
df['stft_ptp_skewness'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).skewness))
df['ifgram_min_corrcoef_variance'] = df['filepath'].apply(lambda x: np.min(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance)))
df['ifgram_25_corrcoef_variance'] = df['filepath'].apply(lambda x: np.percentile(np.corrcoef(sps.describe(librosa.core.ifgram(librosa.core.load(x)[0])).variance),25))
df['stft_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).variance))
df['stft_25_variance'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).variance, 25))
df['stft_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).mean))
df['stft_cov_mean'] = df['filepath'].apply(lambda x: np.cov(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).mean))
df['stft_max_skewness'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).skewness))
df['stft_std_skewness'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).skewness))
df['stft_max_kurtosis'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).kurtosis))
df['stft_min_kurtosis'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).kurtosis))
df['stft_ptp_kurtosis'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).kurtosis))
df['stft_cov_kurtosis'] = df['filepath'].apply(lambda x: np.cov(sps.describe(librosa.core.stft(librosa.core.load(x)[0])).kurtosis))
df['autocorrelate_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.core.autocorrelate(librosa.core.load(x)[0])).minmax))
df['autocorrelate_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.core.autocorrelate(librosa.core.load(x)[0])).minmax))
df['melspectrogram_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).minmax))
df['melspectrogram_25_cov_minmax'] = df['filepath'].apply(lambda x: np.percentile(np.cov(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).minmax),25))
df['melspectrogram_min_variance'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).variance))
df['melspectrogram_mean_variance'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).variance))
df['melspectrogram_max_mean'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).mean))
df['melspectrogram_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).mean))
df['melspectrogram_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).mean, 25))
df['melspectrogram_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).mean, 50))
df['melspectrogram_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).mean)))
df['melspectrogram_75_skewness'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).skewness, 75))
df['melspectrogram_mean_skewness'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.melspectrogram(librosa.core.load(x)[0])).skewness))
df['zero_crossing_rate_max_minmax'] = df['filepath'].apply(lambda x: np.max(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax))
df['zero_crossing_rate_min_minmax'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax))
df['zero_crossing_rate_ptp_minmax'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax))
df['zero_crossing_rate_50_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax, 50))
df['zero_crossing_rate_75_minmax'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax, 75))
df['zero_crossing_rate_mean_minmax'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax))
df['zero_crossing_rate_std_minmax'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax))
df['zero_crossing_rate_var_minmax'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax))
df['zero_crossing_rate_max_cov_minmax'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).minmax)))
df['zero_crossing_rate_min_mean'] = df['filepath'].apply(lambda x: np.min(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean))
df['zero_crossing_rate_ptp_mean'] = df['filepath'].apply(lambda x: np.ptp(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean))
df['zero_crossing_rate_25_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean, 25))
df['zero_crossing_rate_50_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean, 50))
df['zero_crossing_rate_75_mean'] = df['filepath'].apply(lambda x: np.percentile(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean, 75))
df['zero_crossing_rate_mean_mean'] = df['filepath'].apply(lambda x: np.mean(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean))
df['zero_crossing_rate_std_mean'] = df['filepath'].apply(lambda x: np.std(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean))
df['zero_crossing_rate_var_mean'] = df['filepath'].apply(lambda x: np.var(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean))
df['zero_crossing_rate_max_cov_mean'] = df['filepath'].apply(lambda x: np.max(np.cov(sps.describe(librosa.feature.zero_crossing_rate(librosa.core.load(x)[0])).mean)))

# Exported transformed dataframe to file
df.to_csv('equal_version.csv')